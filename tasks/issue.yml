---
- name: Issue the certificate (webroot)
  become: true
  ansible.builtin.command: >
    {{ letsencrypt_base_dir }}/acme.sh --issue
      -d "{{ letsencrypt_domain }}"
      {% for item in letsencrypt_domain_extra %} -d {{ item }}{% endfor %}
      {{ '--staging' if letsencrypt_staging else None }}
      {{ '--force' if letsencrypt_force else None }}
      -w "{{ letsencrypt_webroot }}"
      --pre-hook "{{ letsencrypt_issue.prehook }}"
      --post-hook "{{ letsencrypt_issue.posthook }}"
      --renew-hook "{{ letsencrypt_issue.renewhook }}"
  register: issueW
  failed_when: issueW.rc == 1
  changed_when: issueW.rc == 0
  when: letsencrypt_issue_mode == "webroot"

- name: Issue the certificate (standalone)
  become: true
  ansible.builtin.command: >
    {{ letsencrypt_base_dir }}/acme.sh --issue
      -d "{{ letsencrypt_domain }}"
      {% for item in letsencrypt_domain_extra %} -d {{ item }}{% endfor %}
      {{ '--staging' if letsencrypt_staging else None }}
      {{ '--force' if letsencrypt_force else None }}
      --standalone
      --httpport {{ letsencrypt_port }}
      --pre-hook "{{ letsencrypt_issue.prehook }}"
      --post-hook "{{ letsencrypt_issue.posthook }}"
      --renew-hook "{{ letsencrypt_issue.renewhook }}"
  register: issueS
  failed_when: issueS.rc == 1
  changed_when: issueS.rc == 0
  when: letsencrypt_issue_mode == "standalone"
